from aiogram import types, Dispatcher
from aiogram.dispatcher.filters import Text
from aiogram.types import ContentType

from tgbot.misc.states import JammyMusicStates
from tgbot.config import Config
import lyricsgenius


async def find_lyrics(message: types.Message):
    await JammyMusicStates.find_lyrics.set()
    await message.answer("–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞ –∏ —è –≤–µ—Ä–Ω—É —Ç–µ–±–µ —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏, –µ—Å–ª–∏ –Ω–∞–π–¥—É")


async def get_lyrics(message: types.Message, config: Config, state):
    await state.reset_state()
    try:
        lyrics_genius = lyricsgenius.Genius(config.tg_bot.genius_token)
        result = lyrics_genius.search_song(message.text)
        m = result.lyrics
        if len(m) > 4095:
            for x in range(0, len(m), 4095):
                await message.answer(m[x:x + 4095])
        else:
            await message.answer(result.lyrics)
    except Exception:
        await message.answer("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞–º –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–µ–∫—Å—Ç –¥–∞–Ω–Ω–æ–π –ø–µ—Å–Ω–∏")


async def get_unknown_content_to_find_lyrics(message: types.Message):
    await message.answer("–ü–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ –Ω–∞–π—Ç–∏ —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏, –Ω–æ –º—ã –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç –≤–∞—Å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞, "
                         "–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å –≤ —Ç–æ–º, —á—Ç–æ –≤—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç.")

def register_find_lyrics(dp: Dispatcher):
    dp.register_message_handler(find_lyrics, Text("üìÑ –ù–∞–π—Ç–∏ —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏"))
    dp.register_message_handler(get_lyrics, content_types=ContentType.TEXT,
                                state=JammyMusicStates.find_lyrics)
    dp.register_message_handler(get_unknown_content_to_find_lyrics, content_types=ContentType.ANY,
                                state=JammyMusicStates.find_lyrics)
